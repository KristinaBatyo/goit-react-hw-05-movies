{"version":3,"file":"static/js/892.9ed3da9f.chunk.js","mappings":"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","sources":["components/card/MovieCard.Styled.jsx","components/card/MovieCard.jsx","pages/details/MovieDetailsPage.jsx","services/Api.js"],"sourcesContent":["import styled from '@emotion/styled'\nimport { NavLink } from 'react-router-dom';\n\nexport const CardStyled = styled.div`\npadding: 0.5rem;\ndisplay: flex;\nflex-direction: column;\n}`\n\nexport const ImgStyled = styled.img`\nborder: 2px solid orange;\nborder-radius: 8px;\nwidth: 300px;\n}`\n\nexport const ListStyled = styled.li`\nlist-style-type: none;\ncolor: #D2B48C;\nmargin: 5px;\n}`\n\nexport const NavLinkStyled = styled(NavLink)`\ntext-decoration: none; \nlist-style-type: none;\ncolor: #D2B48C;\nmargin: 5px;\n}`\n\nexport const TextStyled = styled.p`\nlist-style-type: none;\ncolor: #D2B48C;\nmargin: 5px;\n}`\n\nexport const TitleStyled = styled.h2`\ncolor: #A0522D;\nmargin: 5px;\n}`","\nimport { Outlet } from 'react-router-dom';\nimport { CardStyled, ImgStyled, ListStyled, TitleStyled, TextStyled, NavLinkStyled } from './MovieCard.Styled';\nimport PropTypes from \"prop-types\";\n\nconst Card = ({url, tag, title, score, overview, genres}) => {\n    const baseImgUrl = 'https://image.tmdb.org/t/p/w500';\n\nreturn (\n    <CardStyled>\n        \n        <ImgStyled src={baseImgUrl + url} alt={tag} />\n        <>\n        <TitleStyled>{title}</TitleStyled>\n        <TitleStyled>User Score {Math.round( score * 10)}%</TitleStyled>\n        <TitleStyled>Overview</TitleStyled>\n        <TextStyled>{overview}</TextStyled>\n        <TitleStyled>Genres</TitleStyled>\n        <ul>\n        {genres?.map(({ id, name }) => (\n            <ListStyled key={id}>{name}</ListStyled>\n        ))}\n        </ul>\n        </>\n            <TitleStyled>Additional information</TitleStyled>\n            <ul>\n                <ListStyled>\n                <NavLinkStyled to=\"cast\"> Cast </NavLinkStyled>\n                </ListStyled>\n                <ListStyled>\n                <NavLinkStyled to=\"reviews\"> Reviews </NavLinkStyled>\n                </ListStyled>\n            </ul>\n            <Outlet/>\n    </CardStyled>\n)\n};\n\nexport default Card;\n\nCard.propTypes = {\n    url: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    score: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.shape().isRequired),\n\n}","import { useParams, useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { fetchMovie } from \"services/Api\";\nimport  Card  from \"components/card/MovieCard\";\n\n\n\nexport const MovieDetailsPage = () => {\n    const [movies, setMovies] = useState();\n    const {id} = useParams();\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const fetchMov = async() => {\n            try{\n                const result = await fetchMovie(id);\n                setMovies(result)\n            } catch ({responce})\n            {console.log(responce.data.message)}\n        }\n        fetchMov()\n    }, [id])\n    return (\n        <>\n            <button onClick={()=> navigate(-1)}>Go back</button>\n        {movies && (\n                    <Card\n                    url={movies?.poster_path}\n                    tag={movies?.title}\n                    title={movies?.title}\n                    score={movies?.vote_average}\n                    overview={movies?.overview}\n                    genres={movies?.genres}\n                />\n        )}\n        </>\n    );\n    \n}","import axios from \"axios\";\n\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = '6ae976ca2f3433c900811972ef517fed';\n\n\nexport const fetchTrendingMovies = async()=> {\n    const resp = await axios.get(`trending/movie/day?api_key=${apiKey}`);\n    return resp.data.results;\n}\n\nexport const fetchMovie = async (id) => {\n    const resp = await axios.get(`movie/${id}?api_key=${apiKey}&language=en-US`);\n    return resp.data;\n}\n\nexport const fetchCast = async (id) => {\n    const resp = await axios.get(`movie/${id}/credits?api_key=${apiKey}&language=en-US`);\n    return resp.data;\n}\n\nexport const fetchReviews = async (id) => {\n    const resp = await axios.get(`movie/${id}/reviews?api_key=${apiKey}&language=en-US&page=1`);\n    return resp.data;\n}\n\nexport const fetchSearchMovies = async query => {\n    const resp = await axios.get(`search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`);\n    return resp.data.results;\n}"],"names":["CardStyled","styled","ImgStyled","ListStyled","NavLinkStyled","NavLink","TextStyled","TitleStyled","url","tag","title","score","overview","genres","src","alt","Math","round","map","id","name","to","MovieDetailsPage","useState","movies","setMovies","useParams","navigate","useNavigate","useEffect","fetchMov","fetchMovie","result","responce","console","log","data","message","onClick","poster_path","vote_average","axios","apiKey","fetchTrendingMovies","resp","results","fetchCast","fetchReviews","fetchSearchMovies","query"],"sourceRoot":""}
{"version":3,"file":"static/js/145.c4c50088.chunk.js","mappings":"+QAEaA,EAAgBC,EAAAA,EAAAA,GAAH,4EAMbC,EAAWD,EAAAA,EAAAA,GAAH,0FAKRE,EAAYF,EAAAA,EAAAA,IAAH,yC,SCgCtB,EAnCa,WACX,OAAwBG,EAAAA,EAAAA,YAAxB,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAgBR,OAXAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,gHAEGC,EAAAA,EAAAA,GAAUJ,GAFb,OAEZK,EAFY,OAGlBN,EAAQM,GAHU,gDAITC,EAJS,KAITA,SACTC,QAAQC,IAAIF,EAASG,KAAKC,SALR,yDAAH,qDAQnBP,GACD,GAAE,CAACH,KAEF,+BACE,SAACP,EAAD,iBACGK,QADH,IACGA,OADH,EACGA,EAAMA,KAAKa,KAAI,gBAAGX,EAAH,EAAGA,GAAIY,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAArB,OACd,UAAClB,EAAD,YACE,SAACC,EAAD,CACEkB,IAAKF,EArBE,kCAqB0BA,EAnB3C,sGAoBUG,IAAKF,KAEP,uBAAIA,MALSb,EADD,OAYvB,ECzCYgB,EAAW,WACtB,OACE,+BACE,SAAC,EAAD,KAGL,C,8LCNDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAS,mCAEFC,EAAmB,mCAAG,oGACdF,EAAAA,EAAAA,IAAA,qCAAwCC,IAD1B,cAC3BE,EAD2B,yBAE1BA,EAAKX,KAAKY,SAFgB,2CAAH,qDAKnBC,EAAU,mCAAG,WAAMtB,GAAN,uFACLiB,EAAAA,EAAAA,IAAA,gBAAmBjB,EAAnB,oBAAiCkB,EAAjC,oBADK,cAClBE,EADkB,yBAEjBA,EAAKX,MAFY,2CAAH,sDAKVL,EAAS,mCAAG,WAAMJ,GAAN,uFACJiB,EAAAA,EAAAA,IAAA,gBACRjB,EADQ,4BACckB,EADd,oBADI,cACjBE,EADiB,yBAIhBA,EAAKX,MAJW,2CAAH,sDAOTc,EAAY,mCAAG,WAAMvB,GAAN,uFACPiB,EAAAA,EAAAA,IAAA,gBACRjB,EADQ,4BACckB,EADd,2BADO,cACpBE,EADoB,yBAInBA,EAAKX,MAJc,2CAAH,sDAOZe,EAAiB,mCAAG,WAAMC,GAAN,uFACZR,EAAAA,EAAAA,IAAA,+BACOC,EADP,iCACsCO,EADtC,gCADY,cACzBL,EADyB,yBAIxBA,EAAKX,KAAKY,SAJc,2CAAH,qD","sources":["components/cast/Cast.styled.jsx","components/cast/Cast.jsx","pages/cast/CastPage.jsx","services/Api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastContainer = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nexport const CastItem = styled.li`\n  flex-basis: calc((100% - 20px) / 3);\n  list-style-type: none;\n`;\n\nexport const CastImage = styled.img`\n  width: 200px;\n`;\n","import { useState, useEffect } from 'react';\nimport { fetchCast } from 'services/Api';\nimport { useParams } from 'react-router-dom';\nimport {\n  CastContainer,\n  CastItem,\n  CastImage,\n} from 'components/cast/Cast.styled';\n// import { CastItem } from \"components/cast/Cast\";\n\nconst Cast = () => {\n  const [cast, setCast] = useState();\n  const { id } = useParams();\n  const baseImgUrl = 'https://image.tmdb.org/t/p/w500';\n  const placeHolder =\n    'https://invisiblechildren.com/wp-content/uploads/2012/07/facebook-profile-picture-no-pic-avatar.jpg';\n\n  useEffect(() => {\n    const fetchCastPage = async () => {\n      try {\n        const result = await fetchCast(id);\n        setCast(result);\n      } catch ({ responce }) {\n        console.log(responce.data.message);\n      }\n    };\n    fetchCastPage();\n  }, [id]);\n  return (\n    <>\n      <CastContainer>\n        {cast?.cast.map(({ id, profile_path, name }) => (\n          <CastItem key={id}>\n            <CastImage\n              src={profile_path ? baseImgUrl + profile_path : placeHolder}\n              alt={name}\n            />\n            <p>{name}</p>\n          </CastItem>\n        ))}\n      </CastContainer>\n    </>\n  );\n};\n\nexport default Cast;\n","import Cast from 'components/cast/Cast';\n\nexport const CastPage = () => {\n  return (\n    <>\n      <Cast />\n    </>\n  );\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = '6ae976ca2f3433c900811972ef517fed';\n\nexport const fetchTrendingMovies = async () => {\n  const resp = await axios.get(`trending/movie/day?api_key=${apiKey}`);\n  return resp.data.results;\n};\n\nexport const fetchMovie = async id => {\n  const resp = await axios.get(`movie/${id}?api_key=${apiKey}&language=en-US`);\n  return resp.data;\n};\n\nexport const fetchCast = async id => {\n  const resp = await axios.get(\n    `movie/${id}/credits?api_key=${apiKey}&language=en-US`\n  );\n  return resp.data;\n};\n\nexport const fetchReviews = async id => {\n  const resp = await axios.get(\n    `movie/${id}/reviews?api_key=${apiKey}&language=en-US&page=1`\n  );\n  return resp.data;\n};\n\nexport const fetchSearchMovies = async query => {\n  const resp = await axios.get(\n    `search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return resp.data.results;\n};\n"],"names":["CastContainer","styled","CastItem","CastImage","useState","cast","setCast","id","useParams","useEffect","fetchCastPage","fetchCast","result","responce","console","log","data","message","map","profile_path","name","src","alt","CastPage","axios","apiKey","fetchTrendingMovies","resp","results","fetchMovie","fetchReviews","fetchSearchMovies","query"],"sourceRoot":""}
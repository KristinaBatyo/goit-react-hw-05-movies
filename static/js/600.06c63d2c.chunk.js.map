{"version":3,"file":"static/js/600.06c63d2c.chunk.js","mappings":"8PAEaA,EAAeC,EAAAA,EAAAA,KAAH,yC,2BC0BzB,EAvBqB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAaA,OACE,+BACE,UAACL,EAAD,CAAcE,SAVG,SAAAI,GACnBA,EAAEC,iBACmB,KAAjBH,EAAMI,OAIVN,EAASE,IAHPK,EAAAA,EAAAA,IAAM,iCAIT,EAGG,WACE,kBAAOC,KAAK,OAAOC,KAAK,OAAOC,MAAOR,EAAOS,SAd9B,SAAAP,GACnBD,EAASC,EAAEQ,cAAcF,MAAMG,cAChC,KAaK,mBAAQJ,KAAK,SAAb,wBAIP,E,QCxBYK,EAAiBf,EAAAA,EAAAA,GAAH,+GAOdgB,GAAehB,EAAAA,EAAAA,GAAOiB,EAAAA,GAAPjB,CAAH,qECSzB,EAfmB,SAAC,GAAgB,IAAdkB,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACGF,QADH,IACGA,OADH,EACGA,EAAQG,KAAI,SAAAC,GAAK,OAChB,SAACP,EAAD,WACE,SAACC,EAAD,CAAcO,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,SACGG,EAAMK,SAFUL,EAAME,GADX,KASvB,E,SCTYI,EAAY,WACvB,OAA4B1B,EAAAA,EAAAA,UAAS,MAArC,eAAOgB,EAAP,KAAeW,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAaF,EAAaG,IAAI,cACpC,GAA0BhC,EAAAA,EAAAA,UAAS,MAAnC,eAAOiC,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACR,GAAKJ,EAAL,CAIA,IAAMK,EAAU,mCAAG,8GAEMC,EAAAA,EAAAA,IAAkBN,GAFxB,OAETO,EAFS,OAGfX,EAAUW,GAHK,gDAKfJ,GAAS5B,EAAAA,EAAAA,IAAM,0BALA,yDAAH,qDAQhB8B,GAVC,CAWF,GAAE,CAACH,EAAOF,IASX,OACE,iCACE,SAAC,EAAD,CAAchC,SATG,SAAAI,GACfA,IAAMa,GAGVc,EAAgB,CAAEC,WAAY5B,GAC/B,IAKIa,IAAU,SAAC,EAAD,CAAYA,OAAQA,KAC/B,SAAC,KAAD,MAGL,C,8LC1CDuB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAS,mCAEFC,EAAmB,mCAAG,oGACdF,EAAAA,EAAAA,IAAA,qCAAwCC,IAD1B,cAC3BE,EAD2B,yBAE1BA,EAAKC,KAAKC,SAFgB,2CAAH,qDAKnBR,EAAU,mCAAG,WAAMd,GAAN,uFACLiB,EAAAA,EAAAA,IAAA,gBAAmBjB,EAAnB,oBAAiCkB,EAAjC,oBADK,cAClBE,EADkB,yBAEjBA,EAAKC,MAFY,2CAAH,sDAKVE,EAAS,mCAAG,WAAMvB,GAAN,uFACJiB,EAAAA,EAAAA,IAAA,gBACRjB,EADQ,4BACckB,EADd,oBADI,cACjBE,EADiB,yBAIhBA,EAAKC,MAJW,2CAAH,sDAOTG,EAAY,mCAAG,WAAMxB,GAAN,uFACPiB,EAAAA,EAAAA,IAAA,gBACRjB,EADQ,4BACckB,EADd,2BADO,cACpBE,EADoB,yBAInBA,EAAKC,MAJc,2CAAH,sDAOZN,EAAiB,mCAAG,WAAMpC,GAAN,uFACZsC,EAAAA,EAAAA,IAAA,+BACOC,EADP,iCACsCvC,EADtC,gCADY,cACzByC,EADyB,yBAIxBA,EAAKC,KAAKC,SAJc,2CAAH,qD","sources":["components/movies/MoviesSearch.styled.jsx","components/movies/MoviesSearch.jsx","components/movielist/MoviesList.styled.jsx","components/movielist/MoviesList.jsx","pages/movies/MoviesSearchPage.jsx","services/Api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const SearchStyled = styled.form`\n  margin: 20px;\n`;\n","import { SearchStyled } from './MoviesSearch.styled';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nconst SearchMovies = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      toast('Enter the name of the picture!');\n      return;\n    }\n    onSubmit(query);\n  };\n  return (\n    <>\n      <SearchStyled onSubmit={handleSubmit}>\n        <input name=\"name\" type=\"text\" value={query} onChange={handleChange} />\n        <button type=\"submit\">Search</button>\n      </SearchStyled>\n    </>\n  );\n};\nexport default SearchMovies;\n\nSearchMovies.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const ListItemSteled = styled.li`\n  text-decoration: none;\n  list-style-type: none;\n  color: #a0522d;\n  margin: 5px;\n`;\n\nexport const NavLinkStyle = styled(NavLink)`\ntext-decoration: none; \ncolor: #A0522D;\n\n}`;\n","import { useLocation } from 'react-router-dom';\nimport { ListItemSteled, NavLinkStyle } from './MoviesList.styled';\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies?.map(movie => (\n        <ListItemSteled key={movie.id}>\n          <NavLinkStyle to={`${movie.id}`} state={{ from: location }}>\n            {movie.title}\n          </NavLinkStyle>\n        </ListItemSteled>\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n","import { Outlet } from 'react-router-dom';\nimport SearchMovies from 'components/movies/MoviesSearch';\nimport MoviesList from 'components/movielist/MoviesList';\nimport { fetchSearchMovies } from 'services/Api';\nimport { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\n\nexport const MoviePage = () => {\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const moviesName = searchParams.get('moviesName');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!moviesName) {\n      return;\n    }\n\n    const fetchMovie = async () => {\n      try {\n        const result = await fetchSearchMovies(moviesName);\n        setMovies(result);\n      } catch (error) {\n        setError(toast('Something went wrong!'));\n      }\n    };\n    fetchMovie();\n  }, [error, moviesName]);\n\n  const handleSubmit = e => {\n    if (e === movies) {\n      return;\n    }\n    setSearchParams({ moviesName: e });\n  };\n\n  return (\n    <>\n      <SearchMovies onSubmit={handleSubmit} />\n      {movies && <MoviesList movies={movies} />}\n      <Outlet />\n    </>\n  );\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = '6ae976ca2f3433c900811972ef517fed';\n\nexport const fetchTrendingMovies = async () => {\n  const resp = await axios.get(`trending/movie/day?api_key=${apiKey}`);\n  return resp.data.results;\n};\n\nexport const fetchMovie = async id => {\n  const resp = await axios.get(`movie/${id}?api_key=${apiKey}&language=en-US`);\n  return resp.data;\n};\n\nexport const fetchCast = async id => {\n  const resp = await axios.get(\n    `movie/${id}/credits?api_key=${apiKey}&language=en-US`\n  );\n  return resp.data;\n};\n\nexport const fetchReviews = async id => {\n  const resp = await axios.get(\n    `movie/${id}/reviews?api_key=${apiKey}&language=en-US&page=1`\n  );\n  return resp.data;\n};\n\nexport const fetchSearchMovies = async query => {\n  const resp = await axios.get(\n    `search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return resp.data.results;\n};\n"],"names":["SearchStyled","styled","onSubmit","useState","query","setQuery","e","preventDefault","trim","toast","name","type","value","onChange","currentTarget","toLowerCase","ListItemSteled","NavLinkStyle","NavLink","movies","location","useLocation","map","movie","to","id","state","from","title","MoviePage","setMovies","useSearchParams","searchParams","setSearchParams","moviesName","get","error","setError","useEffect","fetchMovie","fetchSearchMovies","result","axios","apiKey","fetchTrendingMovies","resp","data","results","fetchCast","fetchReviews"],"sourceRoot":""}
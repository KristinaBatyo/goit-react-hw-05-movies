{"version":3,"file":"static/js/600.9dc34e15.chunk.js","mappings":"8PAEaA,EAAeC,EAAAA,EAAAA,KAAH,uC,2BCmCzB,EA/BqB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,SACpB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAcA,OACI,+BACA,UAACL,EAAD,CAAcE,SAXG,SAAAI,GACjBA,EAAEC,iBACmB,KAAjBH,EAAMI,OAIVN,EAASE,IAHLK,EAAAA,EAAAA,IAAM,iCAKb,EAGG,WACA,kBACAC,KAAK,OACLC,KAAK,OACLC,MAAOR,EACPS,SAnBiB,SAAAP,GACjBD,EAASC,EAAEQ,cAAcF,MAAMG,cAClC,KAmBG,mBAAQJ,KAAK,SAAb,wBAMP,E,QChCYK,EAAiBf,EAAAA,EAAAA,GAAH,wGAOdgB,GAAehB,EAAAA,EAAAA,GAAOiB,EAAAA,GAAPjB,CAAH,qECQzB,EAfmB,SAAC,GAAc,IAAbkB,EAAY,EAAZA,OACXC,GAAWC,EAAAA,EAAAA,MACjB,OACI,+BACCF,QADD,IACCA,OADD,EACCA,EAAQG,KAAI,SAAAC,GAAK,OACd,SAACP,EAAD,WACI,SAACC,EAAD,CAAcO,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,SACCG,EAAMK,SAFUL,EAAME,GADb,KASzB,E,SCPYI,EAAY,WACrB,OAA4B1B,EAAAA,EAAAA,UAAS,MAArC,eAAOgB,EAAP,KAAeW,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAaF,EAAaG,IAAI,cACpC,GAA0BhC,EAAAA,EAAAA,UAAS,MAAnC,eAAOiC,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAW,WACP,GAAKJ,EAAL,CAIA,IAAMK,EAAU,mCAAG,8GAEUC,EAAAA,EAAAA,IAAkBN,GAF5B,OAELO,EAFK,OAGXX,EAAUW,GAHC,gDAKXJ,GAAS5B,EAAAA,EAAAA,IAAM,0BALJ,yDAAH,qDAQhB8B,GAVC,CAWJ,GAAE,CAACH,EAAOF,IASX,OACI,iCACA,SAAC,EAAD,CAAchC,SATG,SAAAI,GACbA,IAAMa,GAGVc,EAAgB,CAACC,WAAY5B,GAChC,IAKIa,IAAU,SAAC,EAAD,CAAYA,OAAQA,KAC/B,SAAC,KAAD,MAIP,C,8LC5CDuB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAS,mCAGFC,EAAmB,mCAAG,oGACZF,EAAAA,EAAAA,IAAA,qCAAwCC,IAD5B,cACzBE,EADyB,yBAExBA,EAAKC,KAAKC,SAFc,2CAAH,qDAKnBR,EAAU,mCAAG,WAAOd,GAAP,uFACHiB,EAAAA,EAAAA,IAAA,gBAAmBjB,EAAnB,oBAAiCkB,EAAjC,oBADG,cAChBE,EADgB,yBAEfA,EAAKC,MAFU,2CAAH,sDAKVE,EAAS,mCAAG,WAAOvB,GAAP,uFACFiB,EAAAA,EAAAA,IAAA,gBAAmBjB,EAAnB,4BAAyCkB,EAAzC,oBADE,cACfE,EADe,yBAEdA,EAAKC,MAFS,2CAAH,sDAKTG,EAAY,mCAAG,WAAOxB,GAAP,uFACLiB,EAAAA,EAAAA,IAAA,gBAAmBjB,EAAnB,4BAAyCkB,EAAzC,2BADK,cAClBE,EADkB,yBAEjBA,EAAKC,MAFY,2CAAH,sDAKZN,EAAiB,mCAAG,WAAMpC,GAAN,uFACVsC,EAAAA,EAAAA,IAAA,+BAAkCC,EAAlC,iCAAiEvC,EAAjE,gCADU,cACvByC,EADuB,yBAEtBA,EAAKC,KAAKC,SAFY,2CAAH,qD","sources":["components/movies/MoviesSearch.styled.jsx","components/movies/MoviesSearch.jsx","components/movielist/MoviesList.styled.jsx","components/movielist/MoviesList.jsx","pages/movies/MoviesSearchPage.jsx","services/Api.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const SearchStyled = styled.form `\nmargin: 20px;\n`\n\n","import { SearchStyled } from \"./MoviesSearch.styled\"\nimport { useState } from 'react';\nimport {toast} from \"react-toastify\";\nimport PropTypes from \"prop-types\";\n\n\nconst SearchMovies = ({ onSubmit}) => {\n    const [query, setQuery] = useState('');\n\n    const handleChange = e => {\n        setQuery(e.currentTarget.value.toLowerCase());\n    }\n    const handleSubmit = e => {\n        e.preventDefault();\n        if (query.trim() === '') {\n            toast('Enter the name of the picture!');\n            return;\n        }\n        onSubmit(query);\n\n    }\n    return (\n        <>\n        <SearchStyled onSubmit={handleSubmit}>\n        <input \n        name=\"name\"\n        type=\"text\"\n        value={query}\n        onChange={handleChange}\n        />\n        <button type=\"submit\">Search</button>\n\n        </SearchStyled>\n\n        </>\n    )\n}\nexport default SearchMovies;\n\nSearchMovies.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n}\n","import styled from \"@emotion/styled\";\nimport { NavLink,  } from \"react-router-dom\"\n\n\nexport const ListItemSteled = styled.li `\ntext-decoration: none; \nlist-style-type: none;\ncolor: #A0522D;\nmargin: 5px;\n`\n\nexport const NavLinkStyle = styled(NavLink)`\ntext-decoration: none; \ncolor: #A0522D;\n\n}`","import { useLocation } from 'react-router-dom';\nimport { ListItemSteled, NavLinkStyle } from './MoviesList.styled';\nimport PropTypes from \"prop-types\";\n\nconst MoviesList = ({movies}) => {\n    const location = useLocation();\n    return (\n        <ul>\n        {movies?.map(movie => (\n            <ListItemSteled key={movie.id}>\n                <NavLinkStyle to={`${movie.id}`} state={{ from: location }} >\n                {movie.title}\n                </NavLinkStyle>\n            </ListItemSteled>\n        ))}\n        </ul>\n    )\n}\n\nexport default MoviesList\n\nMoviesList.propTypes = {\n    movies: PropTypes.arrayOf(\n    PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        title: PropTypes.string.isRequired,\n    }).isRequired\n    ).isRequired,\n};\n\n","import {Outlet} from \"react-router-dom\";\nimport SearchMovies  from \"components/movies/MoviesSearch\";\nimport MoviesList from \"components/movielist/MoviesList\";\nimport { fetchSearchMovies } from \"services/Api\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { toast } from 'react-toastify';\n\n\n\nexport const MoviePage = () => {\n    const [movies, setMovies] = useState(null);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const moviesName = searchParams.get(\"moviesName\");\n    const [error, setError] = useState(null)\n\n    useEffect (() => {\n        if (!moviesName) {\n            return;\n        }\n\n        const fetchMovie = async () => {\n            try {\n                const result = await fetchSearchMovies(moviesName);\n                setMovies(result)\n            } catch (error) {\n                setError(toast('Something went wrong!'))\n            }\n        }\n        fetchMovie()\n    }, [error, moviesName])\n\n    const handleSubmit = e => {\n        if (e === movies) {\n            return \n        } \n        setSearchParams({moviesName: e});\n    };\n\n    return(\n        <>\n        <SearchMovies onSubmit={handleSubmit} />\n        {movies && <MoviesList movies={movies}/>}\n        <Outlet/>\n    </>\n    )\n    \n}","import axios from \"axios\";\n\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = '6ae976ca2f3433c900811972ef517fed';\n\n\nexport const fetchTrendingMovies = async()=> {\n    const resp = await axios.get(`trending/movie/day?api_key=${apiKey}`);\n    return resp.data.results;\n}\n\nexport const fetchMovie = async (id) => {\n    const resp = await axios.get(`movie/${id}?api_key=${apiKey}&language=en-US`);\n    return resp.data;\n}\n\nexport const fetchCast = async (id) => {\n    const resp = await axios.get(`movie/${id}/credits?api_key=${apiKey}&language=en-US`);\n    return resp.data;\n}\n\nexport const fetchReviews = async (id) => {\n    const resp = await axios.get(`movie/${id}/reviews?api_key=${apiKey}&language=en-US&page=1`);\n    return resp.data;\n}\n\nexport const fetchSearchMovies = async query => {\n    const resp = await axios.get(`search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`);\n    return resp.data.results;\n}"],"names":["SearchStyled","styled","onSubmit","useState","query","setQuery","e","preventDefault","trim","toast","name","type","value","onChange","currentTarget","toLowerCase","ListItemSteled","NavLinkStyle","NavLink","movies","location","useLocation","map","movie","to","id","state","from","title","MoviePage","setMovies","useSearchParams","searchParams","setSearchParams","moviesName","get","error","setError","useEffect","fetchMovie","fetchSearchMovies","result","axios","apiKey","fetchTrendingMovies","resp","data","results","fetchCast","fetchReviews"],"sourceRoot":""}
{"version":3,"file":"static/js/693.82cb67f5.chunk.js","mappings":"kRAEaA,EAAgBC,EAAAA,EAAAA,GAAH,2CAIbC,EAAoBD,EAAAA,EAAAA,EAAH,2CAIjBE,EAAoBF,EAAAA,EAAAA,GAAH,wG,SCgC9B,EAjCgB,WACd,OAA8BG,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAaR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,mCAAG,gHAEAC,EAAAA,EAAAA,IAAaJ,GAFb,OAEfK,EAFe,OAGrBN,EAAWM,GAHU,gDAIZC,EAJY,KAIZA,SACTC,QAAQC,IAAIF,EAASG,KAAKC,SALL,yDAAH,qDAQtBP,GACD,GAAE,CAACH,KAGF,8BACGF,EAAQa,SAAab,EAAQa,QAAQC,QACpC,+BACGd,QADH,IACGA,OADH,EACGA,EAASa,QAAQE,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASf,EAApB,EAAoBA,GAApB,OACpB,UAACJ,EAAD,YACE,SAACH,EAAD,UAAgBqB,KAChB,SAACnB,EAAD,UAAoBoB,MAFEf,EADJ,OAQxB,uEAIP,ECtCYgB,EAAc,WACzB,OACE,+BACE,SAAC,EAAD,KAGL,C,8LCNDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAS,mCAEFC,EAAmB,mCAAG,oGACdF,EAAAA,EAAAA,IAAA,qCAAwCC,IAD1B,cAC3BE,EAD2B,yBAE1BA,EAAKX,KAAKE,SAFgB,2CAAH,qDAKnBU,EAAU,mCAAG,WAAMrB,GAAN,uFACLiB,EAAAA,EAAAA,IAAA,gBAAmBjB,EAAnB,oBAAiCkB,EAAjC,oBADK,cAClBE,EADkB,yBAEjBA,EAAKX,MAFY,2CAAH,sDAKVa,EAAS,mCAAG,WAAMtB,GAAN,uFACJiB,EAAAA,EAAAA,IAAA,gBACRjB,EADQ,4BACckB,EADd,oBADI,cACjBE,EADiB,yBAIhBA,EAAKX,MAJW,2CAAH,sDAOTL,EAAY,mCAAG,WAAMJ,GAAN,uFACPiB,EAAAA,EAAAA,IAAA,gBACRjB,EADQ,4BACckB,EADd,2BADO,cACpBE,EADoB,yBAInBA,EAAKX,MAJc,2CAAH,sDAOZc,EAAiB,mCAAG,WAAMC,GAAN,uFACZP,EAAAA,EAAAA,IAAA,+BACOC,EADP,iCACsCM,EADtC,gCADY,cACzBJ,EADyB,yBAIxBA,EAAKX,KAAKE,SAJc,2CAAH,qD","sources":["components/reviews/Reviews.styled.jsx","components/reviews/Reviews.jsx","pages/reviews/ReviewsPage.jsx","services/Api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewsStyled = styled.h3`\n  color: #a0522d;\n`;\n\nexport const ReviewsTextStyled = styled.p`\n  color: #deb887;\n`;\n\nexport const ReviewsListStyled = styled.li`\nlist-style-type: none;\ncolor: #D2B48C;\nbackground: \t#F5F5F5;\nmargin: 5px;\n}`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchReviews } from 'services/Api';\nimport {\n  ReviewsStyled,\n  ReviewsTextStyled,\n  ReviewsListStyled,\n} from 'components/reviews/Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { id } = useParams();\n  useEffect(() => {\n    const fetchReviewsPage = async () => {\n      try {\n        const result = await fetchReviews(id);\n        setReviews(result);\n      } catch ({ responce }) {\n        console.log(responce.data.message);\n      }\n    };\n    fetchReviewsPage();\n  }, [id]);\n\n  return (\n    <>\n      {reviews.results && !!reviews.results.length ? (\n        <ul>\n          {reviews?.results.map(({ author, content, id }) => (\n            <ReviewsListStyled key={id}>\n              <ReviewsStyled>{author}</ReviewsStyled>\n              <ReviewsTextStyled>{content}</ReviewsTextStyled>\n            </ReviewsListStyled>\n          ))}\n        </ul>\n      ) : (\n        <div>We don't have any reviews for this movie</div>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import Reviews from 'components/reviews/Reviews';\n\nexport const ReviewsPage = () => {\n  return (\n    <>\n      <Reviews />\n    </>\n  );\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = '6ae976ca2f3433c900811972ef517fed';\n\nexport const fetchTrendingMovies = async () => {\n  const resp = await axios.get(`trending/movie/day?api_key=${apiKey}`);\n  return resp.data.results;\n};\n\nexport const fetchMovie = async id => {\n  const resp = await axios.get(`movie/${id}?api_key=${apiKey}&language=en-US`);\n  return resp.data;\n};\n\nexport const fetchCast = async id => {\n  const resp = await axios.get(\n    `movie/${id}/credits?api_key=${apiKey}&language=en-US`\n  );\n  return resp.data;\n};\n\nexport const fetchReviews = async id => {\n  const resp = await axios.get(\n    `movie/${id}/reviews?api_key=${apiKey}&language=en-US&page=1`\n  );\n  return resp.data;\n};\n\nexport const fetchSearchMovies = async query => {\n  const resp = await axios.get(\n    `search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return resp.data.results;\n};\n"],"names":["ReviewsStyled","styled","ReviewsTextStyled","ReviewsListStyled","useState","reviews","setReviews","id","useParams","useEffect","fetchReviewsPage","fetchReviews","result","responce","console","log","data","message","results","length","map","author","content","ReviewsPage","axios","apiKey","fetchTrendingMovies","resp","fetchMovie","fetchCast","fetchSearchMovies","query"],"sourceRoot":""}